@import url('https://fonts.googleapis.com/css2?family=Jua&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Noto+Serif+KR&display=swap');

.introContainer {
    width: 100%;
    height: 100vh;
    background: linear-gradient(180deg, #262829 66.67%, #252C33 100%);
    position: relative;

}

.particle {
    filter: blur(2px);
    box-shadow: 0px 0px 18px #fff;
    /* position: absolute; */
}

.Typing {
    width: 50%;
    text-align: left;
    z-index: 1;
    color: #fff;
    position: fixed;
    top: 45%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-family: 'Jua';
    text-shadow: 0px 0px 10px #fff;
    white-space: pre-line;
}

.nextBtn {
    width: 30vmin;
    height: 20vmin;
    position: absolute;
    top: 80%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-decoration: none;
    font-size: 1.5em;
    font-family: 'Noto Serif KR', serif;
    display: flex;
    justify-content: center;
}
.nextBtn a{
    color: #fff;
    text-decoration: none;
}
  
/* .cube {
    width: 60px;
    height: 60px;
    animation: rotation 10s linear infinite;
    position: absolute;
    top: 50%;
    left: 50%;
    margin-top: -20px;
    margin-left: -105px;
    transform-style: preserve-3d;
}

.face {
    width: 100%;
    height: 100%;
    position: absolute;
    transform-origin: center;
}

.face div {
    border: 2px solid #fff;
    box-shadow: 0px 0px 10px #fff;
    width: 60px;
    height: 60px;
    display: inline-block;
    box-sizing: border-box;
    vertical-align: top;
}

.front {
    transform: translate3d(0,0,30px);
}

.back {
    transform: rotateY(180deg) translate3d(0,0,30px);
}

.left {
    transform: rotateY(-90deg) translate3d(0,0,30px);
}

.right {
    transform: rotateY(90deg) translate3d(0,0,30px);
}

.top {
    transform: rotateX(90deg) translate3d(0,0,30px);
}

.bottom {
    transform: rotateX(-90deg) translate3d(0,0,30px);
} */

.cube {
    animation: rotation 10s linear infinite;
    position: absolute;
    top: 0;
    left: 0;
}
@keyframes rotation {
    from { transform: rotateY(0) rotateX(0); }
    to   { transform: rotateY(-360deg) rotateX(360deg); }
}